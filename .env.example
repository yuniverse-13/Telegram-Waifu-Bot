# Токен вашего Telegram бота
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_example_12345:ABCDEFG

# --- Переменные для Docker Compose ---
# Используются для настройки сервиса PostgreSQL и для формирования DATABASE_URL для бота
# Эти значения будут подставлены в docker-compose.yml

# Учетные данные для PostgreSQL
DB_USER=waifu_bot_user_example
# Пароль для пользователя БД. Если пароль содержит специальные символы (@, :, /, %, # и т.д.),
# он ДОЛЖЕН БЫТЬ URL-кодирован. Например, 'p@ss%word' станет 'p%40ss%25word'.
DB_PASSWORD_URL_ENCODED=your_url_encoded_password_example
DB_NAME=waifu_bot_db_example

# Порт, на котором PostgreSQL слушает ВНУТРИ своего контейнера (обычно 5432)
DB_PORT_CONTAINER=5432

# Порт на ХОСТ-машине, который будет проброшен на DB_PORT_CONTAINER контейнера PostgreSQL
# Измените, если порт 5432 на вашем хосте занят.
DB_PORT_HOST=5432

# Режим SSL для подключения к PostgreSQL (например, disable, require, verify-full)
DB_SSLMODE=disable


# --- Информация для пользователя ---
# Если вы используете docker-compose.yml из этого проекта, то переменная DATABASE_URL
# для бота будет автоматически сформирована внутри docker-compose.yml с использованием
# указанных выше DB_USER, DB_PASSWORD_URL_ENCODED, DB_NAME, DB_PORT_CONTAINER и DB_SSLMODE.
# Примерно так:
# "postgres://${DB_USER}:${DB_PASSWORD_URL_ENCODED}@postgres_db:${DB_PORT_CONTAINER}/${DB_NAME}?sslmode=${DB_SSLMODE}"
# Поэтому нет необходимости явно определять DATABASE_URL в этом .env файле, если используется docker-compose.
# Если вы запускаете бота ЛОКАЛЬНО (без Docker Compose) и ваш PostgreSQL также запущен локально,
# вам нужно будет определить DATABASE_URL напрямую. Раскомментируйте и настройте строку ниже:
# DATABASE_URL=postgres://local_db_user:your_local_password@localhost:5432/local_db_name?sslmode=disable